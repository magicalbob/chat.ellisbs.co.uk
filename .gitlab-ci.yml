stages:
  - test
  - scan
  - build_docker
  - deploy

variables:
  SONAR_SCANNER_VERSION: 5.0.1.3006
  GIT_STRATEGY: clone  # Ensure full clone is used in all jobs
  GIT_DEPTH: 0         # Disable shallow clone for all jobs
  IMAGE_NAME: docker.ellisbs.co.uk:7070/chat-app:latest
  DOCKER_USERNAME: docker

test_python_job:
  image: docker.ellisbs.co.uk:5190/ubuntu:24.04
  stage: test
  tags:
    - linux
  script:
    - python3 -m venv /tmp/venv
    - source /tmp/venv/bin/activate
    - ./testscript.sh
  artifacts:
    paths:
      - coverage.xml

test_npm_job:
  image: docker.ellisbs.co.uk:5190/node:18-alpine
  stage: test
  tags:
    - linux
  script:
    - npm install jest jest-environment-jsdom @jest/globals --save-dev
    - npx jest --coverage
  artifacts:
    paths:
      - javascript-coverage

scan_job:
  image: docker.ellisbs.co.uk:5190/ubuntu:24.04
  stage: scan
  tags:
    - linux
  script:
    - pushd ~
    - curl -o /tmp/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_SCANNER_VERSION}.zip
    - unzip -n /tmp/sonar-scanner.zip
    - popd
    - ~/sonar-scanner-${SONAR_SCANNER_VERSION}/bin/sonar-scanner -Dsonar.token=$SONAR_TOKEN -Dsonar.javascript.lcov.reportPaths=javascript-coverage/lcov.info
  dependencies:
    - test_python_job
    - test_npm_job

build_docker:
  image: docker.ellisbs.co.uk:5190/docker:24
  stage: build_docker
  tags:
    - linux
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_HOST: "unix:///root/run/docker-host.sock"
  script:
    - echo "192.168.0.2 docker.ellisbs.co.uk" >> /etc/hosts
    - echo "$DOCKER_PASSWORD" | docker login docker.ellisbs.co.uk:7070 -u "$DOCKER_USERNAME" --password-stdin
    - docker build -t $IMAGE_NAME .
    - docker push $IMAGE_NAME

deploy_chat:
  image: docker.ellisbs.co.uk:5190/docker:24
  stage: deploy
  tags:
    - linux
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_HOST: "unix:///root/run/docker-host.sock"
    CHAT_APP: "chat"
  rules:
    - if: '$deploy == "1"'
      when: on_success
    - when: never
  script:
    - echo "Deploying Chat app container..."
    - docker stop ${CHAT_APP} || true
    - docker rm ${CHAT_APP} || true
    - docker run -d --name ${CHAT_APP} -e GEMINI_API_KEY=${GEMINI_API_KEY} -p 48080:48080 --restart unless-stopped $IMAGE_NAME
    - echo "Waiting for app to become available..."
    - sleep 5
    - wget -q http://192.168.0.2:48080/health || (echo "Deployment failed" && exit 1)
  dependencies:
    - build_docker
